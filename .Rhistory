q()
setwd("C:/Users/thevm/Resources/R_Analysis/01_Demo")
demo_tabel <- read.csv(file'demo.csv',check.names=F, sringsAsFactor=F)
demo_tabel <- read.csv(file='demo.csv',check.names=F, sringsAsFactor=F)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
> demo_table[3,"Year"]
demo_table[3,"Year"]
View(demo_table)
> demo_table$"Vehicle_Class"[2]
demo_table$"Vehicle_Class"[2]
demo_table2 <- fromjson(txt='demo.json')
demo_table2 <- fromJSON(txt='demo.json')
demo_table2 <- fromJSON(Txt='demo.json')
?<fromJSON>
?fromJSON
demo_table2 <- fromJSON(txt='demo.json')
setwd("C:/Users/thevm/Resources/R_Analysis/01_Demo")
demo_table2 <- fromJSON(txt='demo.json')
library(jsonlite)
demo_table2 <- fromJSON(txt='demo.json')
filter_table <- demo_table2[demo_table2$price > 10000,]
View(filter_table)
filter_table2 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status) #filter by price and drivetrain
View(filter_table2)
library(tidyverse)?mutate()
?mutate()
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE) #add columns to original data frame
View(demo_table)
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), .groups = 'keep') #create summary table
View(summarize_demo)
View(demo_table2)
View(demo_table2)
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer),Maximum_Price=max(price),Num_Vehicles=n(), .groups = 'keep') #create summary table with multiple columns
demo_table3 <- read.csv('demo2.csv',check.names = F,stringsAsFactors = F)
View(demo_table3)
long_table <- gather(demo_table3,key="Metric",value="Score",buying_price:popularity)
View(long_table)
View(summarize_demo)
View(demo_table3)
View(long_table)
View(demo_table3)
?ggplot()
> head(mpg)
head(mpg)
View(demo_table3)
View(demo_table2)
plt <- ggplot(mpg,aes(x=class)) #import dataset into ggplot2
plt + geom_bar() #plot a bar plot
View(plt)
View(plt)
View(plt)
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep') #create summary table
View(mpg_summary)
> plt + geom_col() #plot a bar plot
plt + geom_col() #plot a bar plot
plt + geom_bar() #plot a bar plot
plt + geom_bar() #plot a bar plot
plt <- ggplot(mpg_summary,aes(x=manufacturer,y=Vehicle_Count)) #import dataset into ggplot2
plt + geom_bar() #plot a bar plot
plt + geom_bar() #plot a bar plot
head(mpg)
plt <- ggplot(mpg,aes(x=class)) #import dataset into ggplot2
plt + geom_bar() #plot a bar plot
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=manufacturer,y=Vehicle_Count)) #import dataset into ggplot2
plt + geom_bar() #plot a bar plot
plt + geom_col() #plot a bar plot
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy)) #import dataset into ggplot2
plt + geom_boxplot() + #add boxplot
> theme(axis.text.x=element_text(angle=45,hjust=1)) + #rotate x-axis labels 45 degrees
plt + geom_boxplot() + #add boxplot
theme(axis.text.x=element_text(angle=45,hjust=1)) + #rotate x-axis labels 45 degrees
> geom_point() #overlay scatter plot on top
plt + geom_boxplot() + #add boxplot
theme(axis.text.x=element_text(angle=45,hjust=1)) + #rotate x-axis labels 45 degrees
geom_point() #overlay scatter plot on top
ggplot(mtcars,aes(x=wt)) + geom_density()
shapiro.test(mtcars$wt)
>t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven))) #compare sample versus population means
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven))) #compare sample versus population means
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven))) #compare sample versus population means
setwd("C:/Users/thevm/Resources/R_Analysis/01_Demo")
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
plt <- ggplot(population_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plo
sample_table <- population_table %>% sample_n(50) #randomly sample 50 data points
plt <- ggplot(sample_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plot
>t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven))) #compare sample versus population means
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven))) #compare sample versus population means
sample_table <- population_table %>% sample_n(50) #generate 50 randomly sampled data points
sample_table2 <- population_table %>% sample_n(50) #generate another 50 randomly sampled data points
t.test(log10(sample_table$Miles_Driven),log10(sample_table2$Miles_Driven)) #compare means of two samples
mtcars_filt <- mtcars[,c("hp","cyl")]
mtcars_filt$cyl <- factor(mtcars_filt$cyl) #convert numeric column to facto
aov(hp ~ cyl,data=mtcars_filt) #compare means across multiple levels
summary(aov(hp ~ cyl,data=mtcars_filt)) #compare means across multiple levels
head(mtcars)
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() #create scatter plo
plt + geom_point() #create scatter plo
cor(mtcars$hp,mtcars$qsec) #calculate correlation coefficient
lm(qsec ~ hp,mtcars) #create linear model
summary(lm(qsec~hp,mtcars)) #summarize linear model
model <- lm(qsec ~ hp,mtcars) #create linear model
model <- lm(qsec ~ hp,mtcars) #create linear model
yvals <- model$coefficients['hp']*mtcars$hp +
model$coefficients['(Intercept)'] #determine y-axis values from linear model
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars) #generate multiple linear regression model
summary(lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars)) #generate summary statistics
table(mpg$class,mpg$year) #generate contingency table
tbl <- table(mpg$class,mpg$year) #generate contingency table
chisq.test(tbl) #compare categorical distributions
tbl <- table(mpg$class,mpg$year) #generate contingency table
chisq.test(tbl) #compare categorical distributions
setwd("C:/Users/thevm/Resources/R_Analysis")
setwd("C:/Users/thevm/Resources/R_Analysis/project")
library(dplyr)
table1<- read.csv(file='MechaCar.csv',check.names=F,stringsAsFactors = F)
table1<- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
lm(mpg ~ vehicle_length+ vehicle_weight + spoiler_angle+ground_clearance + AWD,data=table1) #generate multiple linear regression model
summary( lm(mpg ~ vehicle_length+ vehicle_weight + spoiler_angle+ground_clearance + AWD,data=table1))
summary( lm(mpg ~ vehicle_length+ vehicle_weight + spoiler_angle+ground_clearance + AWD,data=table1))
#deliverable 2
table2<- read.csv(file='Suspension_Coil.csv',check.names=F,stringsAsFactors = F) #Import and read csv file
#Create a total_summary dataframe using the summarize() function
#to get the mean, median, variance, and standard deviation of the PSI column
total_summary <- table2 %>% summarize(Mean=mean(PSI),Median=(PSI),Variance=var(PSI),SD=sd(PSI))
#Create a lot_summary dataframe using groupby() and summarize() functions
#to group each lot by the mean, median, variance, and standard deviation of the PSI column
lot_summary <-table2 %>% group_by(Manufacturing_Lot)%>% summarize(Mean=mean(PSI),Median=(PSI),Variance=var(PSI),SD=sd(PSI))
View(total_summary)
#t-test to determine consistency in sample means
t.test(table2$PSI, mu=1500)
#t-tests for individual lots
t.test(subset(table2, Manufacturing_Lot=="Lot1")$PSI, mu=1500)
t.test(subset(table2, Manufacturing_Lot=="Lot2")$PSI, mu=1500)
t.test(subset(table2, Manufacturing_Lot=="Lot3")$PSI, mu=1500)
